{"version":3,"sources":["components/InputBox.js","components/App.js","reportWebVitals.js","index.js"],"names":["InputBox","state","query","undefined","handleChange","bind","handleSubmit","event","this","setState","target","value","console","log","preventDefault","className","onSubmit","type","onChange","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRA2CeA,G,wDAlCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,WAAOC,GAGT,eAAYC,aAAe,EAAKA,aAAaC,KAAlB,gBAC3B,eAAYC,aAAe,EAAKA,aAAaD,KAAlB,gBAPf,E,yDAUDE,GACXC,KAAKC,SAAS,CAACP,MAAOK,EAAMG,OAAOC,U,mCAGxBJ,GACXK,QAAQC,IAAIN,EAAMG,OAAOC,OACzBJ,EAAMO,mB,+BAIN,OACE,qBAAKC,UAAU,WAAf,SACI,uBAAMC,SAAUR,KAAKF,aAArB,UACI,0CAEI,uBAAOW,KAAK,OAAON,MAAOH,KAAKP,MAAMC,MAAOgB,SAAUV,KAAKJ,kBAE/D,uBAAOa,KAAK,SAASN,MAAM,gB,GA5BlBQ,IAAMC,YCOdC,E,uKARX,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUI,IAAMC,WCOTE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fff0a117.chunk.js","sourcesContent":["// @flow\nimport '../style/InputBox.css';\nimport React from 'react';\n\ntype InputBoxState = {\n  query: ?string,\n}\n\nclass InputBox extends React.Component<{}, InputBoxState> {\n  constructor() {\n    super();\n    this.state = {\n      query: undefined,\n    };\n    // NOTE(shayna): this is a workaround for flow\n    (this: any).handleChange = this.handleChange.bind(this);\n    (this: any).handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event: any) {\n    this.setState({query: event.target.value});\n  }\n\n  handleSubmit(event: any) {\n    console.log(event.target.value); // TODO(shayna): Replace this line with actual logic\n    event.preventDefault();\n  }\n\n  render(): any {\n    return (\n      <div className=\"InputBox\">\n          <form onSubmit={this.handleSubmit}>\n              <label>\n                Word:\n                  <input type=\"text\" value={this.state.query} onChange={this.handleChange}/>\n              </label>\n              <input type=\"submit\" value=\"Go\"/>\n          </form>\n      </div>\n    );\n  }\n}\n\nexport default InputBox;\n  ","// @flow\nimport '../style/App.css';\nimport InputBox from './InputBox';\nimport React from 'react';\n\nclass App extends React.Component<{}> {\n  render(): any {\n    return (\n      <div className=\"App\">\n        <InputBox/>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}